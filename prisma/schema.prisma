datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String    @unique
  emailVerified  DateTime?
  image          String?
  username       String?   @unique
  accounts       Account[]
  hashedPassword String?
  role           UserRole  @default(USER)
  isOauth        Boolean   @default(false)
  // Optional for WebAuthn support

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  USER
  ADMIN
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  id            String   @id @default(cuid())
  email         String   @unique
  token         String   @unique
  emailReplaced String?
  expires       DateTime
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String   @unique
  code    String
  expires DateTime
}

// Optional for WebAuthn support
